"""modify field to profile user

Revision ID: efadb466aad6
Revises: da450e988f37
Create Date: 2023-06-26 02:19:25.099349

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'efadb466aad6'
down_revision = 'da450e988f37'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profile_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='enterprise'
    )
    op.create_table('profile_member',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('profile_type', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('email', sa.String(length=300), nullable=False),
    sa.Column('photo', sa.String(length=255), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True, comment='City to which the player belongs'),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_date', sa.Date(), nullable=False),
    sa.Column('updated_by', sa.String(), nullable=False),
    sa.Column('updated_date', sa.Date(), nullable=False),
    sa.Column('receive_notifications', sa.Boolean(), nullable=False),
    sa.Column('is_ready', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['resources.city.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['enterprise.users.username'], ),
    sa.ForeignKeyConstraint(['profile_type'], ['enterprise.profile_type.name'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['enterprise.users.username'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='enterprise'
    )
    op.create_table('profile_single_player',
    sa.Column('profile_id', sa.String(), nullable=False),
    sa.Column('elo', sa.Integer(), nullable=True),
    sa.Column('ranking', sa.String(length=2), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=False),
    sa.Column('updated_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['enterprise.profile_member.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['enterprise.users.username'], ),
    sa.PrimaryKeyConstraint('profile_id'),
    schema='enterprise'
    )
    op.create_table('profile_users',
    sa.Column('profile_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('is_principal', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['enterprise.users.username'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['enterprise.profile_member.id'], ),
    sa.ForeignKeyConstraint(['username'], ['enterprise.users.username'], ),
    sa.PrimaryKeyConstraint('profile_id', 'username'),
    schema='enterprise'
    )
    op.create_table('invitations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tourney_id', sa.String(), nullable=False),
    sa.Column('profile_id', sa.String(), nullable=False),
    sa.Column('modality', sa.String(length=30), nullable=False),
    sa.Column('status_name', sa.String(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_date', sa.Date(), nullable=False),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('updated_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['enterprise.users.username'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['enterprise.profile_member.id'], ),
    sa.ForeignKeyConstraint(['status_name'], ['resources.entities_status.name'], ),
    sa.ForeignKeyConstraint(['tourney_id'], ['events.tourney.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['enterprise.users.username'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='events'
    )
    op.create_table('players',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tourney_id', sa.String(), nullable=False),
    sa.Column('profile_id', sa.String(), nullable=False),
    sa.Column('nivel', sa.String(length=50), nullable=True),
    sa.Column('invitation_id', sa.String(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_date', sa.Date(), nullable=False),
    sa.Column('updated_by', sa.String(), nullable=False),
    sa.Column('updated_date', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['enterprise.users.username'], ),
    sa.ForeignKeyConstraint(['invitation_id'], ['events.invitations.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['enterprise.profile_member.id'], ),
    sa.ForeignKeyConstraint(['tourney_id'], ['events.tourney.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['enterprise.users.username'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='events'
    )
    op.create_table('referees',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tourney_id', sa.String(), nullable=False),
    sa.Column('profile_id', sa.String(), nullable=False),
    sa.Column('invitation_id', sa.String(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_date', sa.Date(), nullable=False),
    sa.Column('updated_by', sa.String(), nullable=False),
    sa.Column('updated_date', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['enterprise.users.username'], ),
    sa.ForeignKeyConstraint(['invitation_id'], ['events.invitations.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['enterprise.profile_member.id'], ),
    sa.ForeignKeyConstraint(['tourney_id'], ['events.tourney.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['enterprise.users.username'], ),
    sa.PrimaryKeyConstraint('id', 'tourney_id'),
    schema='events'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('referees', schema='events')
    op.drop_table('players', schema='events')
    op.drop_table('invitations', schema='events')
    op.drop_table('profile_users', schema='enterprise')
    op.drop_table('profile_single_player', schema='enterprise')
    op.drop_table('profile_member', schema='enterprise')
    op.drop_table('profile_type', schema='enterprise')
    # ### end Alembic commands ###
